Несколько сопроводительных комментариев

в проекте 2 сцены
Game_Level - игровая сцена
StartScene - сцена загрузки бандла

Bubble,BubbleParent,BubbleBroken - классы шариков и их поведения.
GuiManager - класс отвечающий за работу с интерфейсом
InputManager - класс отвечающий за ввод команд
ObjectPool - класс отвечающий за пул объектов
StartSceneLogic - здесь происходит загрузка бандла, и последующее хранение необходимых данных
TextureManager - отвечает за генерацию процедурной текстуры
LevelManager - главный класс игровой сцены, через него просиходит взаимодействие остальных элементов между собой

NetworkCommand - класс, который используется для передачи информации через поток
Quaternion,Vector3 Serializer - необходимые копии юнитевских классов, но возможные для сериализации
SocketManagement - главный класс сетевого соединения
NetworkManager - тут просиходит отправка и приемка сетевых команд


1. часть
загрузка в StartScene, присвоение данных из бандла в объект, затем выгрузка бандла

2. часть
	используется 4 меша для кружков с разными uv координами(аналогично для разломанных частей)
	генериться текстура состоящая из 4-х разноцветных квадратиков
	разные мешы ссылаются на разные цвета таким образом, что позволяет уменьшить кол-во draw call-ов
	при клике на шарик, он деспауниться и на его место спауниться объект с пачкой разломанных кусков, которые затем разлетаються

3+4. часть
	создание подключение сервер-клиент (первым должен быть запущен сервер, так как реализован вариант жесткого соеднинения, а не асинхронного)
	передача команд от одного другому на начало игры, генерацию шарика, взрыв шарика, передача очков, передача имени другого игрока
	возможен рестарт с тем же коннектом либо начало заново
	возможен вариант игры в сингл режиме
